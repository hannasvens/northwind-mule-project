<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">
	<flow name="post-offer" doc:id="096bd494-83d3-4cbc-80fc-2e33f94e96af" >
		<logger level="INFO" doc:name="Logger" doc:id="679602d0-d7ba-497c-a794-9d82d438062b" />
		<ee:transform doc:name="Transform Message" doc:id="18ad5c33-bc7f-4471-aa4c-8e7f695c6ae0">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	Status: payload.Status,
	PaymentTransactionID: payload.PaymentTransactionID,
	TotalPrice: payload.TotalPrice,
	DateCreated: payload.DateCreated,
	Quantity: payload.Quantity,
	ProductID: payload.ProductID,
	DateApproved: payload.DateApproved,
	CustomerID: payload.CustomerID,
	EmployeeID: payload.EmployeeID,
	OrderID: payload.OrderID,
	PriceDiscount: payload.PriceDiscount
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
<!-- [STUDIO:"pending"]		<db:insert doc:name="pending" doc:id="da0032df-b0e9-4e5c-aedf-e5979e3d17e5" config-ref="Database_Config">
			<error-mapping targetType="OSA:ANY" />
			<db:sql ><![CDATA[insert into offers (CustomerID, ProductID, Quantity, Status)
values (:CustomerID, :ProductID, :Quantity, "pending")]]></db:sql>
			<db:input-parameters ><![CDATA[#[payload]]]></db:input-parameters>
		</db:insert> [STUDIO] -->
		<db:insert doc:name="any fields" doc:id="92159751-3543-4f3b-8133-789bf77b4075" config-ref="Database_Config" >
			<error-mapping targetType="OSA:ANY" />
			<db:sql ><![CDATA[insert into offers (Status, DateCreated, DateApproved, EmployeeID, CustomerID, ProductID, Quantity, OrderID, TotalPrice, PriceDiscount, PaymentTransactionID)
values (:Status, :DateCreated, :DateApproved, :EmployeeID, :CustomerID, :ProductID, :Quantity, :OrderID, :TotalPrice, :PriceDiscount, :PaymentTransactionID)]]></db:sql>
			<db:input-parameters ><![CDATA[#[payload]]]></db:input-parameters>
		</db:insert>
		<set-payload value="An offer request has been sent." doc:name="Offer request sent" doc:id="8bdb7b46-3de8-40ee-b598-6d9944c68311" />
		<logger level="INFO" doc:name="Logger" doc:id="d1b8acf8-76ac-4543-b98f-cdfa7aa5f994"/>
	</flow>
	<flow name="get-all-offers" doc:id="2fea5e85-ab97-435d-942b-710e70d8e4c0" >
		<logger level="INFO" doc:name="Logger" doc:id="90b90f4c-ab5a-4634-8eae-79a80485b7ab" />
		<db:select doc:name="Select" doc:id="fb18590c-5c12-4368-9716-32a4720fd3d1" config-ref="Database_Config">
			<db:sql ><![CDATA[select * from Offers]]></db:sql>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="71b2f787-127a-40aa-9f06-a5bc2077c461" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map ( property , indexOfproperty ) -> {
	"Offer ID": property.OfferID,
	Status: property.Status,
	"Date created": property.DateCreated,
	"Date approved": property.DateApproved,
	"Employee ID": property.EmployeeID,
	"Customer ID": property.CustomerID,
	"Product ID": property.ProductID,
	Quantity: property.Quantity,
	"Order ID": property.OrderID,
	"Total price": property.TotalPrice,
	"Price discount": property.PriceDiscount,
	"Payment transaction ID": property.PaymentTransactionID
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="2d9b1ae7-9340-4af1-8a6e-ad7257b9cc75" message="#[payload]"/>
	</flow>
	<flow name="patch-offer" doc:id="ebffde56-1a1d-4887-853a-41ac1038876c" >
		<logger level="INFO" doc:name="Logger" doc:id="ce407388-d76d-42a9-9446-f2c079933e48" message="#[payload]"/>
				<ee:transform doc:name="Transform Message" doc:id="cd3977da-2605-4995-baa5-57cea8ba14c9" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	Status: payload.Status,
	PaymentTransactionID: payload.PaymentTransactionID,
	TotalPrice: payload.TotalPrice,
	DateCreated: payload.DateCreated,
	DateApproved: payload.DateApproved,
	Quantity: payload.Quantity,
	ProductID: payload.ProductID,
	CustomerID: payload.CustomerID,
	EmployeeID: payload.EmployeeID,
	OrderID: payload.OrderID,
	PriceDiscount: payload.PriceDiscount
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<choice doc:name="Choice" doc:id="1d15c542-dfb5-49e9-8303-8faefb38b8c3" >
		<when expression='#[payload.PaymentTransactionID != null and payload.DateApproved != null]' doc:id="7e2f0d7d-d059-4cc6-84f3-621395f58d25">
				<db:update doc:name="Update" doc:id="747153b8-e506-49fe-baf6-e7add15cfa44" config-ref="Database_Config">
			<db:sql><![CDATA[update Offers
set Status = "accepted", PaymentTransactionID = :PaymentTransactionID, DateApproved = :DateApproved
where OfferID = :offerID]]></db:sql>
			<db:input-parameters><![CDATA[#[{"offerID": attributes.uriParams.offerID, "PaymentTransactionID": message.payload.PaymentTransactionID, "DateApproved": message.payload.DateApproved}]]]></db:input-parameters>
		</db:update>
				<set-payload value="Offer updated to ACCEPTED state." doc:name="ACCEPTED" doc:id="1c5d5390-c409-4c2b-94e4-9ae75b3d7dc1" />
			</when>
			<when expression='#[payload.EmployeeID != null and payload.TotalPrice != null and payload.DateCreated != null]'>
				<db:update doc:name="Update (including discount)" doc:id="572b2120-167a-47bd-826f-501e3ee8627e" config-ref="Database_Config">
			<db:sql><![CDATA[update Offers
set Status = "proposed", EmployeeID = :EmployeeID, TotalPrice = :TotalPrice, DateCreated = :DateCreated, PriceDiscount = :PriceDiscount
where OfferID = :offerID]]></db:sql>
			<db:input-parameters><![CDATA[#[{"offerID": attributes.uriParams.offerID} ++ payload]]]></db:input-parameters>
		</db:update>
				<set-payload value="Offer updated to PROPOSED state." doc:name="PROPOSED" doc:id="aee75dc0-581f-4f9f-9eaf-adf222da2be4" />
			</when>
			<when expression='#[payload.CustomerID != null]'>
				<db:update doc:name="Update" doc:id="81d03294-3797-4595-9a21-70877260f3ca" config-ref="Database_Config">
			<db:sql><![CDATA[update Offers
set Status = "out of stock"
where OfferID = :offerID]]></db:sql>
			<db:input-parameters><![CDATA[#[{"offerID": attributes.uriParams.offerID}]]]></db:input-parameters>
		</db:update>
				<set-payload value="Offer updated to OUT OF STOCK state." doc:name="OUT OF STOCK" doc:id="7cf9c2aa-acbd-4ce8-9bef-f8c9efe6f84f" />
			</when>
			<when expression='#[payload.OrderID != null]'>
				<db:update doc:name="Update" doc:id="e73e102b-d6f4-47ca-9317-cbfcddc42604" config-ref="Database_Config">
			<db:sql><![CDATA[update Offers
set Status = "shipped", OrderID = :OrderID
where OfferID = :offerID]]></db:sql>
			<db:input-parameters><![CDATA[#[{"offerID": attributes.uriParams.offerID, "OrderID": message.payload.OrderID}]]]></db:input-parameters>
		</db:update>
				<set-payload value="Offer updated to SHIPPED state." doc:name="SHIPPED" doc:id="97983417-9fad-4e69-8a9e-d6662d9b8263" />
			</when>
			<when expression='#[payload.Status == "rejected"]'>
				<db:update doc:name="Update" doc:id="1d096314-1b38-41cc-ae3e-e39240315449" config-ref="Database_Config">
			<db:sql><![CDATA[update Offers
set Status = "rejected"
where OfferID = :offerID]]></db:sql>
			<db:input-parameters><![CDATA[#[{"offerID": attributes.uriParams.offerID}]]]></db:input-parameters>
		</db:update>
				<set-payload value="Offer updated to REJECTED state." doc:name="REJECTED" doc:id="634050d8-3bce-406f-a3da-7db63e808204" />
			</when>
			<otherwise>
				<raise-error doc:name="Incorrect input provided" doc:id="150b9668-23b0-450e-a149-2dcb89fdd314" type="ANY"/>
			</otherwise>
		</choice>
		<logger level="INFO" doc:name="Logger" doc:id="be915009-922f-45f4-bd5d-c55f0f23f592"/>
	</flow>
	<flow name="get-offer" doc:id="b73535f2-c416-46b4-ba89-54db70076758" >
		<logger level="INFO" doc:name="Logger" doc:id="24f20c15-30ab-4595-a9ec-da3dec949d06" />
		<db:select doc:name="Select" doc:id="4fb4e708-e8fc-40aa-8624-7d0198a19663" config-ref="Database_Config">
			<db:sql><![CDATA[select * from Offers where OfferID = :offerID]]></db:sql>
			<db:input-parameters><![CDATA[#["offerID": attributes.uriParams.offerID]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="25cf5756-f86f-491c-889b-860b009ff442" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map ( property , indexOfproperty ) -> {
	"Offer ID": property.OfferID,
	Status: property.Status,
	"Date created": property.DateCreated,
	"Date approved": property.DateApproved,
	"Employee ID": property.EmployeeID,
	"Customer ID": property.CustomerID,
	"Product ID": property.ProductID,
	Quantity: property.Quantity,
	"Order ID": property.OrderID,
	"Total price": property.TotalPrice,
	"Price discount": property.PriceDiscount,
	"Payment transaction ID": property.PaymentTransactionID
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="3f846e7a-7f34-4213-a965-6eec933f5f84" message="#[payload]" />
	</flow>
</mule>
