<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="implementation-test-suite.xml" />
	<munit:test name="getProducts-happy-path" doc:id="537cfc9e-a121-45ac-a485-1857d0470e44" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="b0b2fcd4-ee96-41e3-ad51-6b2bca1570d3" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="9c2407f7-ec5b-4325-8b44-c09b2b22df9e" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[[&#10;  {&#10;    "ProductID": 1,&#10;    "ProductName": "Chai",&#10;    "SupplierID": 1,&#10;    "CategoryID": 1,&#10;    "QuantityPerUnit": "10 boxes",&#10;    "UnitPrice": 18000,&#10;    "UnitsInStock": 39,&#10;    "UnitsOnOrder": 0,&#10;    "ReorderLevel": 10,&#10;    "Discontinued": 0&#10;  },&#10;  {&#10;    "ProductID": 2,&#10;    "ProductName": "Chang",&#10;    "SupplierID": 1,&#10;    "CategoryID": 1,&#10;    "QuantityPerUnit": "24 bottles",&#10;    "UnitPrice": 19000,&#10;    "UnitsInStock": 17,&#10;    "UnitsOnOrder": 40,&#10;    "ReorderLevel": 25,&#10;    "Discontinued": 0&#10;  }&#10;]]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getProducts" doc:id="f3fab0ff-0505-41f2-bbb0-9cfa62a1ff91" name="getProducts"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert expression" doc:id="42e6f8a6-cc2d-4f58-a802-be0d19a54803" />
		</munit:validation>
	</munit:test>
	<munit:test name="getProductsByID-happy-path" doc:id="ae5cc327-b770-45fb-b9a7-3c40ac83a240" >
		<munit:behavior >
			<munit:set-event doc:name="Set Event" doc:id="daca4251-5231-4f61-9d8b-84cc8f545d7c" >
				<munit:attributes value="#[2]" />
			</munit:set-event>
			<munit-tools:mock-when doc:name="Mock when" doc:id="27156158-fe6d-4586-b716-a846a0ea8420" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="9a4e75d6-70f5-4821-b1bb-fc127d7db858" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[{&#10;  "Product": null,&#10;  "ProductID": 1,&#10;  "ProductName": "Chai",&#10;  "SupplierID": 1,&#10;  "CategoryID": 1,&#10;  "QuantityPerUnit": "10 boxes",&#10;  "UnitPrice": 18000,&#10;  "UnitsInStock": 39,&#10;  "UnitsOnOrder": 0,&#10;  "ReorderLevel": 10,&#10;  "Discontinued": 0&#10;}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Reference" doc:id="d78b1eec-bb59-4aba-b6d6-b32c33a7473d" name="getProductsByID"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert expression" doc:id="d1f6315c-ac68-43b1-a1b4-25bc07d951fd" />
		</munit:validation>
	</munit:test>
	<munit:test name="getUnitsInStoc-happy-path" doc:id="ad99ad15-591c-4857-bddf-d6bea4bda15d" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="fc3ec697-cd35-42e3-a8a1-8ebb03672cc2" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="7af9584c-b455-4e07-b876-0cfa8faffdad" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[[{"UnitsInStock": 20}]]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Reference" doc:id="208a1236-bee8-4956-a851-573961392208" name="getUnitsInStock"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert expression" doc:id="482d0e0e-50f9-4104-9052-d87ab16f4d0f" />
		</munit:validation>
	</munit:test>
	<munit:test name="getPrice-happy-path" doc:id="2a29f0af-e046-4a2e-9140-8dbf39635e43" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="cf666a13-579a-41af-a9ed-84f3d2ca4aac" processor="db:select" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="94424483-7750-4a85-863a-2e719c3cda11" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[[{"UnitPrice": 20}]]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Reference" doc:id="ec1b0db9-533e-48e9-9b8d-41d38d832485" name="getPrice" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert expression" doc:id="5f269b46-6be1-4c0f-94b8-222e97634106" />
		</munit:validation>
	</munit:test>
	<munit:test name="getPrice-connectivity-error-path" doc:id="add30b3c-f188-4d17-8a77-f28aa19fcad2" expectedErrorType="DB:CONNECTIVITY">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="760f92d4-34ed-4ba1-ac83-847c44540d70" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="94424483-7750-4a85-863a-2e719c3cda11" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="DB:CONNECTIVITY" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow reference" doc:id="6bc468ad-7586-48d7-ae45-047fbf35116a" name="getPrice"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert expression" doc:id="ade9774e-32cb-49c4-9b20-cf95310d5cf8" />
		</munit:validation>
	</munit:test>
	<munit:test name="getPrice-query-execution-error-path" doc:id="1d0c6ffe-4eea-404e-bb5c-b0cd02e466fc" expectedErrorType="DB:QUERY_EXECUTION" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="a159bdc8-de4c-44ac-a81e-bae5fe7113d9" processor="db:select" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="94424483-7750-4a85-863a-2e719c3cda11" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="DB:QUERY_EXECUTION" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow reference" doc:id="648f4da8-81db-413f-a1b4-15e92dfb241e" name="getPrice" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="8ffee1c8-14eb-4d29-9d58-78b6e796e6f0" actual="#[payload]" expected="#[{message: error.description}]"/>
		</munit:validation>
	</munit:test>


</mule>
